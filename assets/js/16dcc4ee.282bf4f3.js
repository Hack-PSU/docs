"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[564],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=l.createContext({}),p=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return l.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,f=s["".concat(d,".").concat(m)]||s[m]||u[m]||o;return n?l.createElement(f,a(a({ref:t},c),{},{components:n})):l.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[s]="string"==typeof e?e:r,a[1]=i;for(var p=2;p<o;p++)a[p]=n[p];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var l=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,id:"default-text"},a="DefaultText",i={unversionedId:"mobile-app/widgets/default-text",id:"mobile-app/widgets/default-text",title:"DefaultText",description:"The DefaultText widget configures Text widgets to use a consistent font selection and font styles. The widget",source:"@site/docs/mobile-app/widgets/03-DefaultText.md",sourceDirName:"mobile-app/widgets",slug:"/mobile-app/widgets/default-text",permalink:"/docs/mobile-app/widgets/default-text",draft:!1,editUrl:"https://github.com/Hack-PSU/docs/docs/mobile-app/widgets/03-DefaultText.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"default-text"},sidebar:"mobileApp",previous:{title:"ScreenHeader",permalink:"/docs/mobile-app/widgets/screen-header"},next:{title:"RenderHtml",permalink:"/docs/mobile-app/widgets/render-html"}},d={},p=[{value:"Required",id:"required",level:2},{value:"<code>text</code>",id:"text",level:3},{value:"Properties (Optional)",id:"properties-optional",level:2},{value:"<code>textLevel</code>",id:"textlevel",level:3},{value:"<code>weight</code>",id:"weight",level:3},{value:"<code>fontSize</code>",id:"fontsize",level:3},{value:"<code>fontStyle</code>",id:"fontstyle",level:3},{value:"<code>maxLines</code>",id:"maxlines",level:3},{value:"<code>textAlign</code>",id:"textalign",level:3},{value:"<code>letterSpacing</code>",id:"letterspacing",level:3},{value:"<code>color</code>",id:"color",level:3},{value:"<code>height</code>",id:"height",level:3}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"defaulttext"},"DefaultText"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultText")," widget configures ",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," widgets to use a consistent font selection and font styles. The widget\nextends from the existing ",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," widget."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"DefaultText(\n  String text, {\n  Key? key,\n  TextLevel? textLevel,\n  FontWeight? weight,\n  double? fontSize,\n  FontStyle? fontStyle,\n  int? maxLines,\n  TextAlign? textAlign,\n  double? letterSpacing,\n  Color? color,\n  double? height,\n});\n")),(0,r.kt)("h2",{id:"required"},"Required"),(0,r.kt)("h3",{id:"text"},(0,r.kt)("inlineCode",{parentName:"h3"},"text")),(0,r.kt)("p",null,"The text to be shown by the widget."),(0,r.kt)("h2",{id:"properties-optional"},"Properties (Optional)"),(0,r.kt)("h3",{id:"textlevel"},(0,r.kt)("inlineCode",{parentName:"h3"},"textLevel")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"enum TextLevel {\n  h1,\n  h2,\n  h3,\n  h4,\n  sub1,\n  sub2,\n  button,\n  body1,\n  body2,\n  caption,\n  overline\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TextLevel")," follows the naming conventions used by the design system. "),(0,r.kt)("h3",{id:"weight"},(0,r.kt)("inlineCode",{parentName:"h3"},"weight")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"FontWeight? weight;\n")),(0,r.kt)("p",null,"The font weight of the text (depends on font family availability)."),(0,r.kt)("h3",{id:"fontsize"},(0,r.kt)("inlineCode",{parentName:"h3"},"fontSize")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"double? fontSize;\n")),(0,r.kt)("p",null,"The size of the font."),(0,r.kt)("h3",{id:"fontstyle"},(0,r.kt)("inlineCode",{parentName:"h3"},"fontStyle")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"FontStyle? fontStyle;\n")),(0,r.kt)("p",null,"The style of the font (follows ",(0,r.kt)("inlineCode",{parentName:"p"},"FontStyle")," from Flutter)."),(0,r.kt)("h3",{id:"maxlines"},(0,r.kt)("inlineCode",{parentName:"h3"},"maxLines")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"int? maxLines;\n")),(0,r.kt)("p",null,"The maximum number of lines to be rendered; overflow is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"TextOverflow.ellipsis"),"."),(0,r.kt)("h3",{id:"textalign"},(0,r.kt)("inlineCode",{parentName:"h3"},"textAlign")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"TextAlign? textAlign;\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("inlineCode",{parentName:"p"},"TextAlign")," from Flutter."),(0,r.kt)("h3",{id:"letterspacing"},(0,r.kt)("inlineCode",{parentName:"h3"},"letterSpacing")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"double? letterSpacing;\n")),(0,r.kt)("p",null,"Controls the spacing between each character of the font."),(0,r.kt)("h3",{id:"color"},(0,r.kt)("inlineCode",{parentName:"h3"},"color")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"Color? color;\n")),(0,r.kt)("p",null,"The color of the text."),(0,r.kt)("h3",{id:"height"},(0,r.kt)("inlineCode",{parentName:"h3"},"height")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"double? height;\n")),(0,r.kt)("p",null,"The height of the widget."))}s.isMDXComponent=!0}}]);