"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[977],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),b=o,u=d["".concat(s,".").concat(b)]||d[b]||h[b]||l;return n?a.createElement(u,r(r({ref:t},p),{},{components:n})):a.createElement(u,r({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const l={sidebar_position:1,id:"table"},r="Table",i={unversionedId:"admin-web-app/components/table",id:"admin-web-app/components/table",title:"Table",description:"The Table component is a flexible, data-generic, and customizable table component that maintains the consistency",source:"@site/docs/admin-web-app/components/01-Table.md",sourceDirName:"admin-web-app/components",slug:"/admin-web-app/components/table",permalink:"/docs/admin-web-app/components/table",draft:!1,editUrl:"https://github.com/Hack-PSU/docs/docs/admin-web-app/components/01-Table.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"table"},sidebar:"mobileApp",previous:{title:"Components",permalink:"/docs/category/components"},next:{title:"Page Layout",permalink:"/docs/admin-web-app/page-layout"}},s={},c=[{value:"Skeleton",id:"skeleton",level:2},{value:"Table Root",id:"table-root",level:2},{value:"GlobalActions",id:"globalactions",level:2},{value:"GlobalRefresh",id:"globalrefresh",level:2},{value:"Props",id:"props",level:3},{value:"<code>onRefresh</code>",id:"onrefresh",level:4},{value:"GlobalPageSize",id:"globalpagesize",level:2},{value:"Container",id:"container",level:2},{value:"Actions",id:"actions",level:2},{value:"Props",id:"props-1",level:3},{value:"<code>left</code>",id:"left",level:4},{value:"<code>center</code>",id:"center",level:4},{value:"<code>right</code>",id:"right",level:4},{value:"PaginationAction",id:"paginationaction",level:2},{value:"DeleteAction",id:"deleteaction",level:2},{value:"Props",id:"props-2",level:3},{value:"<code>onDelete</code>",id:"ondelete",level:4},{value:"Content",id:"content",level:2},{value:"Header",id:"header",level:2},{value:"Body",id:"body",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"table"},"Table"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component is a flexible, data-generic, and customizable table component that maintains the consistency\nof design and API. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component is a wrapper over the\n",(0,o.kt)("a",{parentName:"p",href:"https://tanstack.com/table/v8/docs/guide/introduction"},"React Table")," library and abstracts the configuration\nrequired to create a stable and data-generic component. "),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component uses a nested component pattern to access certain features of the table. Most of its features\nare optional and can be easily opted out by building a different skeleton. Some structures however, are required\nfor the table component to render correctly."),(0,o.kt)("h2",{id:"skeleton"},"Skeleton"),(0,o.kt)("p",null,"Below is the full-featured skeleton of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component integrated with\n",(0,o.kt)("a",{parentName:"p",href:"/docs/admin-web-app/hooks/use-column-def"},"useColumnDef")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/admin-web-app/hooks/use-table"},"useTable"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const defs = useColumnDef({\n  columns: [\n    //...insert column defs\n  ]\n});\n\nconst table = useTable({\n  ...defs,\n  data\n});\n\n<Table {...table}>\n  <Table.GlobalActions>\n    <Table.GlobalRefresh onRefresh={onRefresh} />\n    <Table.GlobalPageSize />\n  </Table.GlobalActions>\n  <Table.Container>\n    <Table.Actions\n      center={<Table.PaginationAction />}\n      right={<Table.DeleteAction onDelete={onDelete} />}\n    />\n    <Table.Content>\n      <Table.Header />\n      <Table.Body />\n    </Table.Content>\n  </Table.Container>\n</Table>\n")),(0,o.kt)("h2",{id:"table-root"},"Table Root"),(0,o.kt)("p",null,"The table root component is the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component itself. Without the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component, none of the functionality\nand states extracted from the ",(0,o.kt)("inlineCode",{parentName:"p"},"useTable")," hook (see ",(0,o.kt)("a",{parentName:"p",href:"/docs/admin-web-app/hooks/use-table"},"useTable"),") will be inherited\nby other components. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," component holds a React context that will pass down states into respective components."),(0,o.kt)("h2",{id:"globalactions"},"GlobalActions"),(0,o.kt)("p",null,"Global actions are a subset of the table actions available. They manage the table states as a whole, for example to\nfilter specific fields in the data through a search bar, control the page size, or refresh the data. By default, the\nsearch bar is always included as it is the only way to filter through the data. "),(0,o.kt)("h2",{id:"globalrefresh"},"GlobalRefresh"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.GlobalRefresh")," component is a refresh button that can be binded to an external refresh logic."),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("h4",{id:"onrefresh"},(0,o.kt)("inlineCode",{parentName:"h4"},"onRefresh")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"onRefresh: () => void\n")),(0,o.kt)("p",null,"The refresh function to be binded to the table refresh button."),(0,o.kt)("h2",{id:"globalpagesize"},"GlobalPageSize"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.GlobalPageSize")," controls the page size for which the table will be paginated. The default value is 8."),(0,o.kt)("h2",{id:"container"},"Container"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Container")," is a required component that draws the boundaries of the table and applies the correct styles."),(0,o.kt)("h2",{id:"actions"},"Actions"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Actions")," is the first row of the table and shows controls to display rows of the table. Some existing actions\nare to paginate through the table and delete selected entries. However, it is possible to create a new action and\ninsert them as a JSX node within the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Actions")," component."),(0,o.kt)("h3",{id:"props-1"},"Props"),(0,o.kt)("h4",{id:"left"},(0,o.kt)("inlineCode",{parentName:"h4"},"left")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"left?: React.ReactNode\n")),(0,o.kt)("p",null,"A React Node that will be used to render the left side of the table actions row."),(0,o.kt)("h4",{id:"center"},(0,o.kt)("inlineCode",{parentName:"h4"},"center")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"center?: React.ReactNode\n")),(0,o.kt)("p",null,"A React Node that will be used to render the center of the table actions row."),(0,o.kt)("h4",{id:"right"},(0,o.kt)("inlineCode",{parentName:"h4"},"right")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"right?: React.ReactNode\n")),(0,o.kt)("p",null,"A React Node that will be used to render the right side of the table actions row."),(0,o.kt)("h2",{id:"paginationaction"},"PaginationAction"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.PaginationAction")," maintains the state of a paginated table and reacts to changes in page sizes."),(0,o.kt)("h2",{id:"deleteaction"},"DeleteAction"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.DeleteAction")," is a delete button that shows a confirmation modal and performs the delete callback function\non a successful confirmation."),(0,o.kt)("h3",{id:"props-2"},"Props"),(0,o.kt)("h4",{id:"ondelete"},(0,o.kt)("inlineCode",{parentName:"h4"},"onDelete")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"onDelete: () => void\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"onDelete")," callback function is called after a successful confirmation modal."),(0,o.kt)("h2",{id:"content"},"Content"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Content")," component applies styles to properly display the header and body of the table."),(0,o.kt)("h2",{id:"header"},"Header"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Header")," component renders the headers accumulated from customizing the columns in\n",(0,o.kt)("a",{parentName:"p",href:"/docs/admin-web-app/hooks/use-column-def"},"useColumnDef"),"."),(0,o.kt)("h2",{id:"body"},"Body"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Table.Body")," component renders all the rows depending on the selected values from each data object."))}d.isMDXComponent=!0}}]);