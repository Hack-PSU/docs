"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[80],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8338:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:3,id:"file-structure"},a="File Structure",l={unversionedId:"mobile-app/file-structure",id:"mobile-app/file-structure",title:"File Structure",description:"The structure below will be the file structure in the lib folder where all flutter source code should be located.",source:"@site/docs/mobile-app/03-File Structure.md",sourceDirName:"mobile-app",slug:"/mobile-app/file-structure",permalink:"/docs/mobile-app/file-structure",draft:!1,editUrl:"https://github.com/Hack-PSU/docs/docs/mobile-app/03-File Structure.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"file-structure"},sidebar:"mobileApp",previous:{title:"Getting Started",permalink:"/docs/mobile-app/getting-started"},next:{title:"Data Models",permalink:"/docs/mobile-app/data-model"}},s={},c=[{value:"API",id:"api",level:2},{value:"BLoC",id:"bloc",level:2},{value:"Services",id:"services",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"file-structure"},"File Structure"),(0,i.kt)("p",null,"The structure below will be the file structure in the ",(0,i.kt)("inlineCode",{parentName:"p"},"lib")," folder where all flutter source code should be located."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"lib\n\u251c\u2500\u2500 common\n\u2502   \u251c\u2500\u2500 api\n\u2502   \u251c\u2500\u2500 bloc\n\u2502   \u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 models\n\u2502   \u2514\u2500\u2500 services\n\u251c\u2500\u2500 routers\n\u251c\u2500\u2500 screens\n\u251c\u2500\u2500 styles\n\u251c\u2500\u2500 widgets\n\u251c\u2500\u2500 app_entry.dart\n\u251c\u2500\u2500 main.dart\n\u2514\u2500\u2500 main_dev.dart\n")),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"api")," folder is structured to group data models together"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"api\n\u2514\u2500\u2500 <model>\n    \u251c\u2500\u2500 <model>_model.dart\n    \u251c\u2500\u2500 <model>_model.g.dart\n    \u2514\u2500\u2500 <model>_repository.dart\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<model>_model.g.dart")," is the generated model file from running the JSON serialization step. Below is an example\nof what a model looks like for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Event")," model."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:json_annotation/json_annotation.dart';\n\npart 'event_model.g.dart';\n\nenum EventType {\n  @JsonValue(\"activity\")\n  ACTIVITY,\n  @JsonValue(\"workshop\")\n  WORKSHOP,\n  @JsonValue('food')\n  FOOD,\n}\n\n@JsonSerializable(\n  createFactory: true,\n  createToJson: true,\n  fieldRename: FieldRename.snake,\n)\nclass Event {\n  Event({\n    required this.uid,\n    required this.eventTitle,\n    required this.eventType,\n    required this.eventStartTime,\n    required this.eventEndTime,\n    required this.eventDescription,\n    required this.locationName,\n    this.starred = false,\n    required this.eventIcon,\n    required this.wsPresenterNames,\n    required this.wsUrls,\n    this.wsRelevantSkills,\n    this.wsSkillLevel,\n  });\n\n  factory Event.fromJson(Map<String, dynamic> json) => _$EventFromJson(json);\n\n  Map<String, dynamic> toJson() => _$EventToJson(this);\n\n  static DateTime _eventTimeFromJson(int int) =>\n      DateTime.fromMillisecondsSinceEpoch(int);\n\n  final String? uid;\n  final String? eventTitle;\n  EventType? eventType;\n\n  @JsonKey(fromJson: _eventTimeFromJson)\n  final DateTime eventStartTime;\n\n  @JsonKey(fromJson: _eventTimeFromJson)\n  final DateTime eventEndTime;\n  final String? eventDescription;\n  final String? locationName;\n  bool? starred;\n  final String? eventIcon;\n  final String? wsPresenterNames;\n  final List<String>? wsUrls;\n  final String? wsSkillLevel;\n  final String? wsRelevantSkills;\n}\n")),(0,i.kt)("p",null,"Each model has a corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"repository")," file that lists all the endpoints related to that model."),(0,i.kt)("h2",{id:"bloc"},"BLoC"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"bloc")," folder groups all ",(0,i.kt)("strong",{parentName:"p"},"shared")," blocs that is used in a more general case. For example blocs used to persist\nglobal states, authentication blocs, or managing user information. To create a bloc follow the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"bloc\n\u2514\u2500\u2500 <bloc_name>\n    \u251c\u2500\u2500 <bloc_name>_bloc.dart\n    \u251c\u2500\u2500 <bloc_name>_event.dart\n    \u2514\u2500\u2500 <bloc_name>_state.dart\n")),(0,i.kt)("h2",{id:"services"},"Services"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"services")," folder groups general-purpose repositories that are not directly related to the API. This can include\nintegrations to Firebase Auth, integration for notification services, etc."))}d.isMDXComponent=!0}}]);