"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,m=u["".concat(s,".").concat(b)]||u[b]||d[b]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},1106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2,id:"websocket"},i="WebSocket",c={unversionedId:"mobile-app/api/websocket",id:"mobile-app/api/websocket",title:"WebSocket",description:"WebSocket integration is managed by a custom widget SocketManager that manages states and forwards listened events",source:"@site/docs/mobile-app/api/02-WebSocket.md",sourceDirName:"mobile-app/api",slug:"/mobile-app/api/websocket",permalink:"/docs/mobile-app/api/websocket",draft:!1,editUrl:"https://github.com/Hack-PSU/docs/docs/mobile-app/api/02-WebSocket.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"websocket"},sidebar:"mobileApp",previous:{title:"API Client",permalink:"/docs/mobile-app/api/client"},next:{title:"Widgets",permalink:"/docs/category/widgets"}},s={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"websocket"},"WebSocket"),(0,a.kt)("p",null,"WebSocket integration is managed by a custom widget ",(0,a.kt)("inlineCode",{parentName:"p"},"SocketManager")," that manages states and forwards listened events\nthrough an observer pattern. We use ",(0,a.kt)("inlineCode",{parentName:"p"},"rxdart")," to create a socket that sends events to its respective observers. This\napproach creates an internal bridge that spans between widgets and pages."),(0,a.kt)("p",null,"To ensure that we only create the connection once, ",(0,a.kt)("inlineCode",{parentName:"p"},"SocketManager")," is designed to be a singleton such that we can use\ndependency injection in order to supply this resource to pages that need its functionality. The ",(0,a.kt)("inlineCode",{parentName:"p"},"SocketManager")," is\ninitialized once in the ",(0,a.kt)("inlineCode",{parentName:"p"},"AuthBloc")," after a user is successfully authenticated. We then use the supplied token to\nproperly authorize the user to use the service."),(0,a.kt)("p",null,"To use the ",(0,a.kt)("inlineCode",{parentName:"p"},"SocketManager"),", we subscribe to the internal socket during the initialization of a page cubit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class <ScreenName>PageCubit extends Cubit<<ScreenName>PageCubitState> {\n  cosnt <ScreenName>PageCubit(\n    //...insert dependencies here\n  ) : super(\n        const <ScreenName>PageCubitState(),\n      ) {\n   _socketSubscription = SocketManager.instance.socket.listen((data) {\n     //...insert data integration with cubit\n   }); \n  }\n  \n  late final StreamSubscription<SocketData> _socketSubscription;\n  \n  @override\n  Future<void> close() async {\n    await _socketSubscription.cancel();\n    super.close();\n  }\n}\n")),(0,a.kt)("p",null,"We need the two additional snippets (overriding close and the ",(0,a.kt)("inlineCode",{parentName:"p"},"socketSubscription"),") in order to properly allocate\nand deallocate a subscription to the socket."))}u.isMDXComponent=!0}}]);